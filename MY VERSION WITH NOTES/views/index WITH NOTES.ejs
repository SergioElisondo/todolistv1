<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="css/style.css">
</head>
<body>
    <h1>To Dos</h1>
    <!-- FORMER <ul> placement -->
      <!-- THIS IS THE SETUP template for grabbing and going through lists from database
      < % for(let i =0; i < zebra.length; i++){ % >
        < % } % > we just open and close a for loop -- lets us run once for every value is the zebra array of data-->

        <ul>
            <% for(let i=0; i < zebra.length; i++) { %>
                <li class='todoItem'>
                    <% if(zebra[i].completed===true) {%>
                        <span class="completed">
                            <%=zebra[i].todo%>
                        </span>
                        <% }else{ %>
                            <span>
                                <%=zebra[i].todo%>
                            </span>
                            <% } %>
                                <span class='del'> Delete </span>
                </li>
                <% } %>
        </ul>


        <h2>Things left to do: <%= left %></h2>

      <!--  < % for(let i = 0; i < zebra.length; i++){ %>
             now add lis 
            <li class="todoItem">
                < % if(zebra[i].completed === true) {%>  adding conditional for completed or NOT completed - looks odd but look from afar and it's still an IF statement -- the < % have to stay in one line 
                <span class="completed">< %= zebra[i].todo %></span> we can use CSS to put a line-through too! this holds the text slightly diff syntax to put in variable < %= % > 
                < % }else{ %> this closes the conditional
                <span>< %= zebra[i].todo %></span>  this allows us to show conditionals of one completed, and one that is not
                < % } %> 
                <span class='del'> Delete </span>
            </li>
            < % } %>
        -->

        <!-- <li>this is where our lists todos will be go</li> -->
    <!--FORMER  </ul> placement -->
    <form action="/createTodo" method="POST">
        <input type="text" placeholder="Enter Todo Item" name="todoItem"> 
        <!-- name='todoItem' is really important since this is what we are going to look for when pulling the information the user entered -->
        <input type="submit">
        <!-- NEXT let makes a route that will HEAR this POST -->
    </form>

    <script src="js/main.js"></script>
</body>
</html>